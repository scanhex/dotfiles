diff --git a/common/git/home.nix b/common/git/home.nix
index be8802a..4ff211c 100644
--- common/git/home.nix
+++ common/git/home.nix
@@ -2,8 +2,9 @@
 {
   programs.git = {
     enable = true;
-    userName = "Alex Morozov";
-    userEmail = "scanhex@gmail.com";
+    userName = config.my.name;
+    userEmail = config.my.email;
+    ignores = [ "/personal/" ];
     extraConfig.push.autoSetupRemote = true;
     aliases = {
       br = "branch";
diff --git a/common/home.nix b/common/home.nix
index 23aa82f..f4744c6 100644
--- common/home.nix
+++ common/home.nix
@@ -1,5 +1,5 @@
 # inspired by https://github.com/zendo/nsworld/blob/main/home-manager/hm-standalone.nix
-{ pkgs, lib, ... }:
+{ pkgs, lib, config, ... }:
 let nix-user-chroot-patch = pkgs.callPackage ../nix-user-chroot-patch {};
 pythonEnv = pkgs.python312.withPackages (ps: [ ps.numpy ps.pandas ps.matplotlib ps.requests ps.pip ]);
 in 
@@ -24,7 +24,9 @@ in
       pkgs.tig
       pkgs.virtualenv
       pkgs.pixi
-      pkgs.unstable.jujutsu
+      pkgs.unstable.ast-grep
+      pkgs.difftastic
+      pkgs.ripgrep
       pythonEnv
       nix-user-chroot-patch
   ];
@@ -38,6 +40,27 @@ in
           };
       };
   };
+  programs.jujutsu = {
+      enable = true;
+      package = pkgs.unstable.jujutsu;
+      settings = {
+          user.name = config.my.name;
+          user.email = config.my.email;
+          merge-tools.difft.diff-args = ["--color=always" "$left" "$right" ];
+          ui.diff.tool = "difft";
+          ui.default-command = ["log" "-r" "present(@) | ancestors(immutable_heads().., 2) | present(trunk())"];
+          revsets.log = "ancestors(@)";
+          snapshot.auto-track = "~(root:\"personal/\" | root:\"Session.vim\" | root:\".clangd\" | root:\"compile_commands.json\" | root:\"CMakePresets.json\")";
+          fix.tools.clang_format = {
+              command = ["clang-format" "--assume-filename=$path"];
+              patterns = ["glob:'**/*.cpp'" "glob:'**/*.h'"];
+          };
+      };
+  };
+  programs.bash.shellAliases = {
+      jjp = "jj fix && jj git push";
+      jjf = "jj git fetch";
+  };
   xdg.enable = true;
   nix = { 
     enable = true;
diff --git a/common/neovim/home.nix b/common/neovim/home.nix
index 440121d..29c2c60 100644
--- common/neovim/home.nix
+++ common/neovim/home.nix
@@ -58,6 +58,7 @@ in
             pyright
             lua-language-server
             nil
+            curl # for codegpt.nvim
             neocmakelsp
             pkgs.rust-analyzer
             lazygit
diff --git a/common/neovim/init.lua/after/plugin/codegpt.lua b/common/neovim/init.lua/after/plugin/codegpt.lua
index e16ce38..381fad3 100644
--- common/neovim/init.lua/after/plugin/codegpt.lua
+++ common/neovim/init.lua/after/plugin/codegpt.lua
@@ -9,9 +9,9 @@ return {
         vim.g["codegpt_api_provider"] = "anthropic"
         vim.g["codegpt_global_commands_defaults"] = {
             --      model = "gpt-4o",
-            model = "claude-3-5-sonnet-20240620",
+            model = "claude-3-5-sonnet-20241022",
             max_tokens = 100000,
-            temperature = 1.0,
+            temperature = 0.0,
             -- extra_parms = { -- optional list of extra parameters to send to the API
             --     presence_penalty = 1,
             --     frequency_penalty= 1
diff --git a/common/neovim/init.lua/after/plugin/dap.lua b/common/neovim/init.lua/after/plugin/dap.lua
index e5a8ad1..5e8be81 100644
--- common/neovim/init.lua/after/plugin/dap.lua
+++ common/neovim/init.lua/after/plugin/dap.lua
@@ -4,8 +4,7 @@ return {
     "theHamsta/nvim-dap-virtual-text",
 --   "rcarriga/nvim-dap-ui",
     "jbyuki/one-small-step-for-vimkind",
-    "nvim-neotest/nvim-nio",
-    "mfussenegger/nvim-dap-python"
+    "nvim-neotest/nvim-nio"
   },
   keys = {
     {"<leader>db", function() require("dap").toggle_breakpoint() end},
@@ -171,7 +170,5 @@ return {
         -- detached = false,
       }
     }
-
-    require("dap-python").setup("python")
   end
 }
diff --git a/common/neovim/init.lua/after/plugin/oil.lua b/common/neovim/init.lua/after/plugin/oil.lua
new file mode 100644
index 0000000..1f98d5d
--- /dev/null
+++ common/neovim/init.lua/after/plugin/oil.lua
@@ -0,0 +1,6 @@
+return {
+    "stevearc/oil.nvim",
+    opts = {
+        default_file_explorer = false,
+    }
+}
diff --git a/common/neovim/init.lua/lua/theprimeagen/remap.lua b/common/neovim/init.lua/lua/theprimeagen/remap.lua
index a37389c..cbcdd5f 100644
--- common/neovim/init.lua/lua/theprimeagen/remap.lua
+++ common/neovim/init.lua/lua/theprimeagen/remap.lua
@@ -5,8 +5,6 @@ vim.keymap.set("v", "J", ":m '>+1<CR>gv=gv")
 vim.keymap.set("v", "K", ":m '<-2<CR>gv=gv")
 
 vim.keymap.set("n", "J", function() return "mz" .. vim.v.count .. "J`z" end, { expr = true })
-vim.keymap.set("n", "<C-u>", "<C-u>zz")
-vim.keymap.set("n", "<C-d>", "<C-d>zz")
 vim.keymap.set("n", "<leader>h", "<C-W><C-H>")
 vim.keymap.set("n", "<leader>l", "<C-W><C-L>")
 vim.keymap.set("n", "n", "nzzzv")
@@ -97,7 +95,3 @@ end
 vim.keymap.set("n", "<F5>", ":lua OpenCorrespondingTestOrSource()<CR>", { noremap = true, silent = true })
 
 vim.keymap.set("n", "<leader>x", "<cmd>!chmod +x %<CR>", { silent = true })
-
-vim.keymap.set("n", "<leader><leader>", function()
-    vim.cmd("so")
-end)
diff --git a/common/shells/bashrc-base.nix b/common/shells/bashrc-base.nix
index a11b63e..3847970 100644
--- common/shells/bashrc-base.nix
+++ common/shells/bashrc-base.nix
@@ -19,6 +19,18 @@ if [ -f ~/.bashrc-secrets ]; then
     . ~/.bashrc-secrets
 fi
 
+zellij_tab_name_update() {
+    if [[ -n $ZELLIJ ]]; then
+        local current_dir=$PWD
+        if [[ $current_dir == $HOME ]]; then
+            current_dir="~"
+        else
+            current_dir=''\${current_dir##*/}
+        fi
+        command nohup zellij action rename-tab $current_dir >/dev/null 2>&1
+    fi
+}
+
 for completion_script in ${config.home.profileDirectory}/share/bash-completion/completions/*
 do
   source "$completion_script"
diff --git a/common/zellij/home.nix b/common/zellij/home.nix
new file mode 100644
index 0000000..5b02ed9
--- /dev/null
+++ common/zellij/home.nix
@@ -0,0 +1,42 @@
+{lib, ... }:
+{
+  programs.zellij = {
+    enable = true;
+    settings = {
+      theme = "dracula";
+      keybinds = {
+        "normal clear-defaults=true" = {
+          "bind \"F12\"".SwitchToMode = "locked";
+          "bind \"Ctrl b\"".SwitchToMode = "tmux";
+        };
+        locked = {
+          "bind \"F12\"".SwitchToMode = "Normal";
+        };
+        scroll = {
+          "bind \"Ctrl u\"".HalfPageScrollUp = { _args = [ ]; };
+          "bind \"Ctrl d\"".HalfPageScrollDown = { _args = [ ]; };
+          "bind \"q\"".SwitchToMode = "Normal";
+          "bind \"G\"".ScrollToBottom = { _args = [ ]; };
+          "bind \"g\"".ScrollToTop = { _args = [ ]; };
+          "bind \"Ctrl b\"".SwitchToMode = "tmux";
+        };
+        tmux = builtins.foldl' (acc: n:
+            acc // {
+              "bind \"${toString n}\"" = { GoToTab = n + 1; SwitchToMode = "Normal"; };
+            }
+          ) { } (lib.range 0 9) // {
+            "bind \"e\"".EditScrollback = { _args = []; };
+            "bind \"e\"".SwitchToMode = "Normal";
+            "bind \"m\"".SwitchToMode = "move";
+            "bind \"=\"".SwitchToMode = "resize";
+          };
+        "shared_except \"locked\"" = {
+          "bind \"F12\"".SwitchToMode = "locked";
+        };
+      };
+      default_layout = "compact";
+      pane_frames = false;
+    };
+  };
+}
+
diff --git a/zed-keymap.json b/zed-keymap.json
deleted file mode 100644
index a2b77cc..0000000
--- zed-keymap.json
+++ /dev/null
@@ -1,38 +0,0 @@
-// Zed keymap
-//
-// For information on binding keys, see the Zed
-// documentation: https://zed.dev/docs/key-bindings
-//
-// To see the default key bindings run `zed: open default keymap`
-// from the command palette.
-[
-  {
-    "context": "Workspace",
-    "bindings": {
-      "ctrl-p": "file_finder::Toggle"
-      //      "shift shift": "file_finder::Toggle"
-    }
-  },
-  {
-    "context": "vim_mode == insert",
-    "bindings": {
-      "j k": ["workspace::SendKeystrokes", "escape"],
-      "ctrl-k": "editor::ShowSignatureHelp"
-    }
-  },
-  {
-    "context": "vim_mode == normal",
-    "bindings": {
-      "ctrl-p": "file_finder::Toggle",
-      "space f": "editor::Format",
-      "space s": "workspace::Save",
-      "space c a": "editor::ToggleCodeActions",
-      //"g h": "editor::SwitchSourceHeader",
-      "K": "editor::Hover"
-    }
-  },
-  {
-    "context": "VimControl && !menu",
-    "bindings": {}
-  }
-]
